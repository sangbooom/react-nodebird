{"ast":null,"code":"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Head from \"next/head\";\nimport { END } from \"redux-saga\";\nimport { Avatar, Card } from \"antd\";\nimport AppLayout from \"../components/AppLayout\";\nimport wrapper from \"../store/configureStore\";\nimport { LOAD_USER_REQUEST } from \"../reducers/user\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst Profile = () => {\n  const {\n    userInfo\n  } = useSelector(state => state.user);\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"ZeroCho | NodeBird\"\n      })\n    }), userInfo ? /*#__PURE__*/_jsx(Card, {\n      actions: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [\"\\uC9F9\\uC9F9\", /*#__PURE__*/_jsx(\"br\", {}), userInfo.Posts]\n      }, \"twit\"), /*#__PURE__*/_jsxs(\"div\", {\n        children: [\"\\uD314\\uB85C\\uC789\", /*#__PURE__*/_jsx(\"br\", {}), userInfo.Followings]\n      }, \"following\"), /*#__PURE__*/_jsxs(\"div\", {\n        children: [\"\\uD314\\uB85C\\uC6CC\", /*#__PURE__*/_jsx(\"br\", {}), userInfo.Followers]\n      }, \"follower\")],\n      children: /*#__PURE__*/_jsx(Card.Meta, {\n        avatar: /*#__PURE__*/_jsx(Avatar, {\n          children: userInfo.nickname[0]\n        }),\n        title: userInfo.nickname,\n        description: \"\\uB178\\uB4DC\\uBC84\\uB4DC \\uB9E4\\uB2C8\\uC544\"\n      })\n    }) : null]\n  });\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: 1\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Sang/react-nodebird/front/pages/about.js"],"names":["React","useSelector","Head","END","Avatar","Card","AppLayout","wrapper","LOAD_USER_REQUEST","Profile","userInfo","state","user","Posts","Followings","Followers","nickname","getServerSideProps","context","store","dispatch","type","data","sagaTask","toPromise"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,GAAT,QAAoB,YAApB;AAEA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAeT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAhC;AAEA,sBACE,MAAC,SAAD;AAAA,4BACE,KAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AADF,MADF,EAIGF,QAAQ,gBACP,KAAC,IAAD;AACE,MAAA,OAAO,EAAE,cACP;AAAA,gDAEE,cAFF,EAGGA,QAAQ,CAACG,KAHZ;AAAA,SAAS,MAAT,CADO,eAMP;AAAA,sDAEE,cAFF,EAGGH,QAAQ,CAACI,UAHZ;AAAA,SAAS,WAAT,CANO,eAWP;AAAA,sDAEE,cAFF,EAGGJ,QAAQ,CAACK,SAHZ;AAAA,SAAS,UAAT,CAXO,CADX;AAAA,6BAmBE,KAAC,IAAD,CAAM,IAAN;AACE,QAAA,MAAM,eAAE,KAAC,MAAD;AAAA,oBAASL,QAAQ,CAACM,QAAT,CAAkB,CAAlB;AAAT,UADV;AAEE,QAAA,KAAK,EAAEN,QAAQ,CAACM,QAFlB;AAGE,QAAA,WAAW,EAAC;AAHd;AAnBF,MADO,GA0BL,IA9BN;AAAA,IADF;AAkCD,CArCD;;AAuCA,OAAO,MAAMC,kBAAkB,GAAGV,OAAO,CAACU,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC9EA,EAAAA,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAEb,iBADe;AAErBc,IAAAA,IAAI,EAAE;AAFe,GAAvB;AAIAJ,EAAAA,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuBjB,GAAvB;AACA,QAAMe,OAAO,CAACC,KAAR,CAAcI,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAPiC,CAA3B;AASP,eAAef,OAAf","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Head from \"next/head\";\nimport { END } from \"redux-saga\";\n\nimport { Avatar, Card } from \"antd\";\nimport AppLayout from \"../components/AppLayout\";\nimport wrapper from \"../store/configureStore\";\nimport { LOAD_USER_REQUEST } from \"../reducers/user\";\n\nconst Profile = () => {\n  const { userInfo } = useSelector((state) => state.user);\n\n  return (\n    <AppLayout>\n      <Head>\n        <title>ZeroCho | NodeBird</title>\n      </Head>\n      {userInfo ? (\n        <Card\n          actions={[\n            <div key=\"twit\">\n              짹짹\n              <br />\n              {userInfo.Posts}\n            </div>,\n            <div key=\"following\">\n              팔로잉\n              <br />\n              {userInfo.Followings}\n            </div>,\n            <div key=\"follower\">\n              팔로워\n              <br />\n              {userInfo.Followers}\n            </div>,\n          ]}\n        >\n          <Card.Meta\n            avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\n            title={userInfo.nickname}\n            description=\"노드버드 매니아\"\n          />\n        </Card>\n      ) : null}\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: 1,\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/Sang/react-nodebird/front/sagas/post.js"],"names":["all","delay","fork","put","takeLatest","addPostAPI","data","axios","post","addPost","action","type","ADD_POST_SUCCESS","err","console","error","ADD_POST_FAILURE","response","watchAddPost","ADD_POST_REQUEST","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,QAAkD,oBAAlD;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAOC,KAAK,CAACC,IAAN,CAAW,WAAX,EAAwBF,IAAxB,CAAP;AACD;;AAED,UAAUG,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF;AACA,UAAMT,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAEC;AADE,KAAD,CAAT;AAGD,GAND,CAME,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMV,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAEK,gBADE;AAERV,MAAAA,IAAI,EAAEO,GAAG,CAACI,QAAJ,CAAaX;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUY,YAAV,GAAyB;AACvB,QAAMd,UAAU,CAACe,gBAAD,EAAmBV,OAAnB,CAAhB;AACD;;AAED,eAAe,UAAUW,QAAV,GAAqB;AAClC,QAAMpB,GAAG,CAAC,CAACE,IAAI,CAACgB,YAAD,CAAL,EAAqBhB,IAAI,CAACgB,YAAD,CAAzB,CAAD,CAAT;AACD","sourcesContent":["import { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post(\"/api/post\", data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    // const result = yield call(addPostAPI, action.data);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([fork(watchAddPost), fork(watchAddPost)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _initialState;\n\nimport produce from 'immer';\nexport var initialState = (_initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null\n}, _defineProperty(_initialState, \"loadPostsLoading\", false), _defineProperty(_initialState, \"loadPostsDone\", false), _defineProperty(_initialState, \"loadPostsError\", null), _defineProperty(_initialState, \"loadPostsLoading\", false), _defineProperty(_initialState, \"loadPostsDone\", false), _defineProperty(_initialState, \"loadPostsError\", null), _defineProperty(_initialState, \"addPostLoading\", false), _defineProperty(_initialState, \"addPostDone\", false), _defineProperty(_initialState, \"addPostError\", null), _defineProperty(_initialState, \"removePostLoading\", false), _defineProperty(_initialState, \"removePostDone\", false), _defineProperty(_initialState, \"removePostError\", null), _defineProperty(_initialState, \"addCommentLoading\", false), _defineProperty(_initialState, \"addCommentDone\", false), _defineProperty(_initialState, \"addCommentError\", null), _initialState);\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n}; // 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n          post.Comments.unshift(action.data);\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Sang/react-nodebird/front/reducers/post.js"],"names":["produce","initialState","mainPosts","imagePaths","hasMorePosts","loadPostsLoading","loadPostsDone","loadPostsError","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","reducer","state","action","draft","concat","length","error","addPostLoading","addPostDone","addPostError","unshift","removePostLoading","removePostDone","removePostError","filter","v","id","addCommentLoading","addCommentDone","addCommentError","post","find","PostId","Comments"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  hasMorePosts: true,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case LOAD_POSTS_REQUEST:\r\n      draft.loadPostsLoading = true;\r\n      draft.loadPostsDone = false;\r\n      draft.loadPostsError = null;\r\n      break;\r\n    case LOAD_POSTS_SUCCESS:\r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsDone = true;\r\n      draft.mainPosts = draft.mainPosts.concat(action.data);\r\n      draft.hasMorePosts = draft.mainPosts.length < 50;\r\n      break;\r\n    case LOAD_POSTS_FAILURE:\r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsError = action.error;\r\n      break;\r\n    case ADD_POST_REQUEST:\r\n      draft.addPostLoading = true;\r\n      draft.addPostDone = false;\r\n      draft.addPostError = null;\r\n      break;\r\n    case ADD_POST_SUCCESS:\r\n      draft.addPostLoading = false;\r\n      draft.addPostDone = true;\r\n      draft.mainPosts.unshift(action.data);\r\n      break;\r\n    case ADD_POST_FAILURE:\r\n      draft.addPostLoading = false;\r\n      draft.addPostError = action.error;\r\n      break;\r\n    case REMOVE_POST_REQUEST:\r\n      draft.removePostLoading = true;\r\n      draft.removePostDone = false;\r\n      draft.removePostError = null;\r\n      break;\r\n    case REMOVE_POST_SUCCESS:\r\n      draft.removePostLoading = false;\r\n      draft.removePostDone = true;\r\n      draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n      break;\r\n    case REMOVE_POST_FAILURE:\r\n      draft.removePostLoading = false;\r\n      draft.removePostError = action.error;\r\n      break;\r\n    case ADD_COMMENT_REQUEST:\r\n      draft.addCommentLoading = true;\r\n      draft.addCommentDone = false;\r\n      draft.addCommentError = null;\r\n      break;\r\n    case ADD_COMMENT_SUCCESS: {\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Comments.unshift(action.data);\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentDone = true;\r\n      break;\r\n    }\r\n    case ADD_COMMENT_FAILURE:\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentError = action.error;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}
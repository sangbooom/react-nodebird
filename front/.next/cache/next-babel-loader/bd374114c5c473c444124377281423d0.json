{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sang\\\\react-nodebird\\\\front\\\\components\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ADD_POST_REQUEST } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"\"),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostLoading = _useSelector.addPostLoading,\n      addPostDone = _useSelector.addPostDone;\n\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  useEffect(function () {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  var onSubmitForm = useCallback(function () {\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: text\n    });\n  }, [text]);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmitForm,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n      value: text,\n      onChange: onChangeText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": \"right\"\n        },\n        htmlType: \"submit\",\n        loading: addPostLoading,\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:3060/\".concat(v),\n            style: {\n              width: \"200px\"\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostForm, \"4VIdmGm7/c5dd5h09mZsLZfk9gk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/Sang/react-nodebird/front/components/PostForm.js"],"names":["React","useCallback","useState","useEffect","useRef","Form","Input","Button","useSelector","useDispatch","ADD_POST_REQUEST","PostForm","dispatch","text","setText","state","post","imagePaths","addPostLoading","addPostDone","imageInput","onClickImageUpload","current","click","onSubmitForm","type","data","onChangeText","e","target","value","margin","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect, useRef } from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { ADD_POST_REQUEST } from \"../reducers/post\";\r\n\r\nconst PostForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [text, setText] = useState(\"\");\r\n  const { imagePaths, addPostLoading, addPostDone } = useSelector(\r\n    (state) => state.post\r\n  );\r\n\r\n  const imageInput = useRef();\r\n  const onClickImageUpload = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, [imageInput.current]);\r\n\r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      setText(\"\");\r\n    }\r\n  }, [addPostDone]);\r\n\r\n  const onSubmitForm = useCallback(() => {\r\n    dispatch({\r\n      type: ADD_POST_REQUEST,\r\n      data: text,\r\n    });\r\n  }, [text]);\r\n\r\n  const onChangeText = useCallback((e) => {\r\n    setText(e.target.value);\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      style={{ margin: \"10px 0 20px\" }}\r\n      encType=\"multipart/form-data\"\r\n      onFinish={onSubmitForm}\r\n    >\r\n      <Input.TextArea\r\n        maxLength={140}\r\n        placeholder=\"어떤 신기한 일이 있었나요?\"\r\n        value={text}\r\n        onChange={onChangeText}\r\n      />\r\n      <div>\r\n        <input type=\"file\" multiple hidden ref={imageInput} />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n        <Button\r\n          type=\"primary\"\r\n          style={{ float: \"right\" }}\r\n          htmlType=\"submit\"\r\n          loading={addPostLoading}\r\n        >\r\n          짹짹\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map((v) => (\r\n          <div key={v} style={{ display: \"inline-block\" }}>\r\n            <img\r\n              src={`http://localhost:3060/${v}`}\r\n              style={{ width: \"200px\" }}\r\n              alt={v}\r\n            />\r\n            <div>\r\n              <Button>제거</Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport wrapper from '../../store/configureStore';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst Post = () => {\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  const router = useRouter();\n  const {\n    id\n  } = router.query; // if (router.isFallback) {\n  //   return <div>Loading...</div>\n  // }\n\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsxs(\"title\", {\n        children: [singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: singlePost.content\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:title\",\n        content: `${singlePost.User.nickname}님의 게시글`\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:description\",\n        content: singlePost.content\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:image\",\n        content: singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:url\",\n        content: `https://nodebird.com/post/${id}`\n      })]\n    }), /*#__PURE__*/_jsx(PostCard, {\n      post: singlePost\n    })]\n  });\n}; // export async function getStaticPaths() {\n//   return {\n//     paths: [\n//       { params: { id: '1' } },\n//       { params: { id: '2' } },\n//       { params: { id: '3' } },\n//       { params: { id: '4' } },\n//     ],\n//     fallback: true,\n//   };\n// }\n\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  console.log(context);\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  return {\n    props: {}\n  };\n});\nexport default Post;","map":{"version":3,"sources":["C:/Users/Sang/react-nodebird/front/pages/post/[id].js"],"names":["React","useSelector","Head","useRouter","END","axios","LOAD_POST_REQUEST","wrapper","PostCard","AppLayout","LOAD_MY_INFO_REQUEST","Post","singlePost","state","post","router","id","query","User","nickname","content","Images","src","getServerSideProps","context","cookie","req","headers","console","log","defaults","Cookie","store","dispatch","type","data","params","sagaTask","toPromise","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\n\nimport axios from 'axios';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport wrapper from '../../store/configureStore';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\n\nconst Post = () => {\n  const { singlePost } = useSelector((state) => state.post);\n  const router = useRouter();\n  const { id } = router.query;\n\n  // if (router.isFallback) {\n  //   return <div>Loading...</div>\n  // }\n\n  return (\n    <AppLayout>\n      <Head>\n        <title>\n          {singlePost.User.nickname}\n          님의 글\n        </title>\n        <meta name=\"description\" content={singlePost.content} />\n        <meta property=\"og:title\" content={`${singlePost.User.nickname}님의 게시글`} />\n        <meta property=\"og:description\" content={singlePost.content} />\n        <meta property=\"og:image\" content={singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'} />\n        <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} />\n      </Head>\n      <PostCard post={singlePost} />\n    </AppLayout>\n  );\n};\n\n// export async function getStaticPaths() {\n//   return {\n//     paths: [\n//       { params: { id: '1' } },\n//       { params: { id: '2' } },\n//       { params: { id: '3' } },\n//       { params: { id: '4' } },\n//     ],\n//     fallback: true,\n//   };\n// }\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  console.log(context);\n  axios.defaults.headers.Cookie = '';\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id,\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  return { props: {} };\n});\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}
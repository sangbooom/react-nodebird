{"ast":null,"code":"import produce from \"immer\";\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport var LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport var LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\nexport var UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport var UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport var UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\nexport var LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport var LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport var LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n}; // 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        break;\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        break;\n\n      case UNLIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n          post.Comments.unshift(action.data);\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Sang/react-nodebird/front/reducers/post.js"],"names":["produce","initialState","mainPosts","imagePaths","hasMorePosts","loadPostsLoading","loadPostsDone","loadPostsError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","reducer","state","action","draft","error","concat","length","unshift","filter","v","id","post","find","PostId","Comments"],"mappings":"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","sourcesContent":["import produce from \"immer\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  hasMorePosts: true,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\r\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\r\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\r\n\r\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\r\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\r\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\r\n\r\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\r\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\r\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\r\nconst reducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LIKE_POST_REQUEST:\r\n        draft.likePostLoading = true;\r\n        draft.likePostDone = false;\r\n        draft.likePostError = null;\r\n        break;\r\n      case LIKE_POST_SUCCESS:\r\n        draft.likePostLoading = false;\r\n        draft.likePostDone = true;\r\n        break;\r\n      case LIKE_POST_FAILURE:\r\n        draft.likePostLoading = false;\r\n        draft.likePostError = action.error;\r\n        break;\r\n      case UNLIKE_POST_REQUEST:\r\n        draft.likePostLoading = true;\r\n        draft.likePostDone = false;\r\n        draft.likePostError = null;\r\n        break;\r\n      case UNLIKE_POST_SUCCESS:\r\n        draft.likePostLoading = false;\r\n        draft.likePostDone = true;\r\n        break;\r\n      case UNLIKE_POST_FAILURE:\r\n        draft.likePostLoading = false;\r\n        draft.likePostError = action.error;\r\n        break;\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsDone = false;\r\n        draft.loadPostsError = null;\r\n        break;\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        draft.mainPosts = draft.mainPosts.concat(action.data);\r\n        draft.hasMorePosts = draft.mainPosts.length < 50;\r\n        break;\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.mainPosts.unshift(action.data);\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentLoading = true;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError = null;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Comments.unshift(action.data);\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = true;\r\n        break;\r\n      }\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentError = action.error;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}
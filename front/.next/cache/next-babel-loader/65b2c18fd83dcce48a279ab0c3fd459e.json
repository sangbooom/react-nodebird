{"ast":null,"code":"import { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../reducers/post\";\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchCommentPost() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/Sang/react-nodebird/front/sagas/post.js"],"names":["all","delay","fork","put","takeLatest","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","action","type","err","console","error","data","response","addComment","watchAddPost","watchCommentPost","postSaga","watchAddComment"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,QAAkD,oBAAlD;AAEA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,mBAJF,EAKEC,mBALF,EAMEC,mBANF,QAOO,kBAPP;;AASA,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF;AACA,UAAMX,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEP;AADE,KAAD,CAAT;AAGD,GAND,CAME,OAAOQ,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMX,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEN,gBADE;AAERU,MAAAA,IAAI,EAAEH,GAAG,CAACI,QAAJ,CAAaD;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUE,UAAV,CAAqBP,MAArB,EAA6B;AAC3B,MAAI;AACF;AACA,UAAMX,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEJ;AADE,KAAD,CAAT;AAGD,GAND,CAME,OAAOK,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMX,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEH,mBADE;AAERO,MAAAA,IAAI,EAAEH,GAAG,CAACI,QAAJ,CAAaD;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUG,YAAV,GAAyB;AACvB,QAAMhB,UAAU,CAACC,gBAAD,EAAmBM,OAAnB,CAAhB;AACD;;AAED,UAAUU,gBAAV,GAA6B;AAC3B,QAAMjB,UAAU,CAACI,mBAAD,EAAsBG,OAAtB,CAAhB;AACD;;AAED,eAAe,UAAUW,QAAV,GAAqB;AAClC,QAAMtB,GAAG,CAAC,CAACE,IAAI,CAACkB,YAAD,CAAL,EAAqBlB,IAAI,CAACqB,eAAD,CAAzB,CAAD,CAAT;AACD","sourcesContent":["import { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_COMMENT_FAILURE,\r\n} from \"../reducers/post\";\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    // const result = yield call(addPostAPI, action.data);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    // const result = yield call(addPostAPI, action.data);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchCommentPost() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
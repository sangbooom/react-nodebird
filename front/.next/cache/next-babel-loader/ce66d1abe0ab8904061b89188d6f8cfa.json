{"ast":null,"code":"import { all, fork, call, put, take, takeEvery, delay } from \"redux-saga/effects\";\n\nfunction loginAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(loginAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/login\");\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (error) {\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeEvery(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeEvery(\"LOG_OUT_REQUEST\", logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["C:/Users/Sang/react-nodebird/front/sagas/user.js"],"names":["all","fork","call","put","take","takeEvery","delay","loginAPI","data","axios","post","logIn","action","type","LOG_IN_SUCCESS","error","LOG_IN_FAILURE","response","logOutAPI","logOut","LOG_OUT_SUCCESS","watchLogIn","watchLogOut","userSaga"],"mappings":"AAAA,SACEA,GADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,GAJF,EAKEC,IALF,EAMEC,SANF,EAOEC,KAPF,QAQO,oBARP;;AAUA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOC,KAAK,CAACC,IAAN,CAAW,YAAX,EAAyBF,IAAzB,CAAP;AACD;;AAED,UAAUG,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF;AACA,UAAMN,KAAK,CAAC,IAAD,CAAX;AACA,UAAMH,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEC,cADE;AAERN,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOO,KAAP,EAAc;AACd,UAAMZ,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEG,cADE;AAERD,MAAAA,KAAK,EAAEA,KAAK,CAACE,QAAN,CAAeT;AAFd,KAAD,CAAT;AAID;AACF;;AAED,SAASU,SAAT,GAAqB;AACnB,SAAOT,KAAK,CAACC,IAAN,CAAW,YAAX,CAAP;AACD;;AAED,UAAUS,MAAV,GAAmB;AACjB,MAAI;AACF;AACA,UAAMb,KAAK,CAAC,IAAD,CAAX;AACA,UAAMH,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEO;AADE,KAAD,CAAT;AAGD,GAND,CAME,OAAOL,KAAP,EAAc;AACd,UAAMZ,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAE,iBADE;AAERE,MAAAA,KAAK,EAAEA,KAAK,CAACE,QAAN,CAAeT;AAFd,KAAD,CAAT;AAID;AACF;;AAED,UAAUa,UAAV,GAAuB;AACrB,QAAMhB,SAAS,CAAC,gBAAD,EAAmBM,KAAnB,CAAf;AACD;;AAED,UAAUW,WAAV,GAAwB;AACtB,QAAMjB,SAAS,CAAC,iBAAD,EAAoBc,MAApB,CAAf;AACD;;AAED,eAAe,UAAUI,QAAV,GAAqB;AAClC,QAAMvB,GAAG,CAAC,CAACC,IAAI,CAACoB,UAAD,CAAL,EAAmBpB,IAAI,CAACqB,WAAD,CAAvB,CAAD,CAAT;AACD","sourcesContent":["import {\r\n  all,\r\n  fork,\r\n  call,\r\n  put,\r\n  take,\r\n  takeEvery,\r\n  delay,\r\n} from \"redux-saga/effects\";\r\n\r\nfunction loginAPI(data) {\r\n  return axios.post(\"/api/login\", data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    // const result = yield call(loginAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logOutAPI() {\r\n  return axios.post(\"/api/login\");\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    // const result = yield call(logOutAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: \"LOG_OUT_FAILURE\",\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeEvery(\"LOG_IN_REQUEST\", logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeEvery(\"LOG_OUT_REQUEST\", logOut);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
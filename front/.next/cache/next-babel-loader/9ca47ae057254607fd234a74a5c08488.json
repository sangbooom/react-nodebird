{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  isLoggedIn: false,\n  isLoggingIn: false,\n  isLoggingOut: false,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport var LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport var LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport var LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport var LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport var LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport var LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport var SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport var SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport var SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport var FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport var FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport var FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n}; // 얘네는 saga에서 대신 해줌\n// export const loginSuccessAction = (data) => {\n//   return {\n//     type: LOG_IN_SUCCESS,\n//     data,\n//   };\n// };\n// export const loginFailureAction = (data) => {\n//   return {\n//     type: LOG_IN_FAILURE,\n//     data,\n//   };\n// };\n\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n}; // export const logoutSuccessAction = () => {\n//   return {\n//     type: LOG_OUT_SUCCESS,\n//   };\n// };\n// export const logoutFailureAction = () => {\n//   return {\n//     type: LOG_OUT_FAILURE,\n//   };\n// };\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: true\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: true,\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: \"sangbooom\"\n        })\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: false\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Sang/react-nodebird/front/reducers/user.js"],"names":["initialState","isLoggedIn","isLoggingIn","isLoggingOut","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","nickname"],"mappings":";;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,KADc;AAE1BC,EAAAA,WAAW,EAAE,KAFa;AAG1BC,EAAAA,YAAY,EAAE,KAHY;AAI1BC,EAAAA,EAAE,EAAE,IAJsB;AAK1BC,EAAAA,UAAU,EAAE,EALc;AAM1BC,EAAAA,SAAS,EAAE;AANe,CAArB;AASP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAU;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAEd,cADD;AAELa,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM,C,CAOP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACvC,SAAO;AACLD,IAAAA,IAAI,EAAEX;AADD,GAAP;AAGD,CAJM,C,CAMP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAMa,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBxB,YAAyB;AAAA,MAAXyB,MAAW;;AAChD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAKd,cAAL;AACE,6CACKiB,KADL;AAEEtB,QAAAA,WAAW,EAAE;AAFf;;AAIF,SAAKM,cAAL;AACE,6CACKgB,KADL;AAEEtB,QAAAA,WAAW,EAAE,KAFf;AAGED,QAAAA,UAAU,EAAE,IAHd;AAIEG,QAAAA,EAAE,kCAAOqB,MAAM,CAACL,IAAd;AAAoBM,UAAAA,QAAQ,EAAE;AAA9B;AAJJ;;AAMF,SAAKjB,cAAL;AACE,6CACKe,KADL;AAEEtB,QAAAA,WAAW,EAAE,KAFf;AAGED,QAAAA,UAAU,EAAE;AAHd;;AAKF,SAAKS,eAAL;AACE,6CACKc,KADL;AAEErB,QAAAA,YAAY,EAAE;AAFhB;;AAIF,SAAKQ,eAAL;AACE,6CACKa,KADL;AAEErB,QAAAA,YAAY,EAAE,KAFhB;AAGEF,QAAAA,UAAU,EAAE;AAHd;;AAKF,SAAKW,eAAL;AACE,6CACKY,KADL;AAEErB,QAAAA,YAAY,EAAE;AAFhB;;AAIF;AACE,aAAOqB,KAAP;AApCJ;AAsCD,CAvCD;;AAyCA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n  isLoggedIn: false,\r\n  isLoggingIn: false,\r\n  isLoggingOut: false,\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\r\n\r\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\r\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\r\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\r\n\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\r\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\r\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\n// 얘네는 saga에서 대신 해줌\r\n// export const loginSuccessAction = (data) => {\r\n//   return {\r\n//     type: LOG_IN_SUCCESS,\r\n//     data,\r\n//   };\r\n// };\r\n\r\n// export const loginFailureAction = (data) => {\r\n//   return {\r\n//     type: LOG_IN_FAILURE,\r\n//     data,\r\n//   };\r\n// };\r\n\r\nexport const logoutRequestAction = () => {\r\n  return {\r\n    type: LOG_OUT_REQUEST,\r\n  };\r\n};\r\n\r\n// export const logoutSuccessAction = () => {\r\n//   return {\r\n//     type: LOG_OUT_SUCCESS,\r\n//   };\r\n// };\r\n\r\n// export const logoutFailureAction = () => {\r\n//   return {\r\n//     type: LOG_OUT_FAILURE,\r\n//   };\r\n// };\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoggingIn: true,\r\n      };\r\n    case LOG_IN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isLoggedIn: true,\r\n        me: { ...action.data, nickname: \"sangbooom\" },\r\n      };\r\n    case LOG_IN_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isLoggedIn: false,\r\n      };\r\n    case LOG_OUT_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoggingOut: true,\r\n      };\r\n    case LOG_OUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        isLoggedIn: false,\r\n      };\r\n    case LOG_OUT_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}